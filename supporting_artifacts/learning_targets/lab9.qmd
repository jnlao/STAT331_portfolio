---
title: "Lab 9: Baby Names"
author: "Janalyn Lao"
format:
  html: 
    self-contained: true
editor: visual
theme: cyborg
code-fold: show
---

## Setup

```{r}
#| message: false

library(tidyverse)
library(here)

```

## Question 1

```{r}
#| message: false

a_names <- read_csv(here::here("supporting_artifacts", 
                               "learning_targets", 
                               "StateNames_A.csv"))

a_names <- a_names |> 
  rename(Sex_at_Birth = 'Gender')

```

## Question 2

```{r}
#| message: false

allison_both_sexes <- a_names |> 
  filter(Name == "Allison") |> 
  group_by(Sex_at_Birth, State) |> 
  summarize(sex_count = sum(Count)) |> 
  pivot_wider(names_from = Sex_at_Birth,
              values_from = sex_count)
allison_both_sexes[is.na(allison_both_sexes)] <- 0

allison_both_sexes
  

```

## Question 3

```{r}

allison_females <- a_names |>
  filter(Name == "Allison",
         Sex_at_Birth == "F") |> 
  group_by(Sex_at_Birth, State) |> 
  summarize(sex_count = sum(Count), .groups = "drop")

```

## Question 4

```{r}

allison <- a_names |>
  filter(Name == "Allison") |> 
  group_by(Year) |> 
  summarize(a_count = sum(Count), .groups = "drop") 
  
ggplot(data = allison,
       mapping = aes(x = Year, y = a_count)) +
    geom_point() +
    geom_line() +
    labs(x = "Year Observed",
         y = "",
         title = "Count of 'Allison'") +
    scale_x_continuous(n.breaks=10) +
    scale_y_continuous(n.breaks=10)

# https://www.statology.org/ggplot-axis-ticks/
  
```

## Question 5

```{r}

allison_lm <- allison |> 
  lm(a_count ~ Year, data = _)

allison_lm

```

## Question 6

```{r}

allison |> 
  ggplot(aes(x = Year, y = a_count)) +
  geom_point() +
  stat_smooth(method = "lm") + 
  labs(x = "Year Observed", 
       y = "",
       title = "Count of 'Allison'")

```

## Question 7

```{r}

allison_lm |> 
  broom::augment() |> 
  ggplot(mapping = aes(x = Year,
                       y = .resid)) +
  geom_point() +
  labs(x = "Year Observed",
       y = "",
       title = "Residuals") +
  scale_x_continuous(n.breaks=10)

```

The only significant pattern I see is that starting in 2011, the residuals begin to increase in a linear way.

### 8) What can you conclude from this model?

Based on this model, there was an increasing amount of children being named "Allison" than was actually predicted, resulting in a positive linear pattern. Where this data ends in 2014, your name wasn't as cool as it was in 1998 or 2009, but if this pattern has continued, it is possible that your name is getting more and more cool again.

## Question 8

```{r}

a_names |> 
  filter(Sex_at_Birth == "M",
         Name == "Allan" | Name == "Alan" | Name == "Allen") |> 
  group_by(Name, Year) |> 
  summarise(al_count = sum(Count), .groups = "drop") |> 
  ggplot(mapping = aes(x = Year, y = al_count, color = Name)) +
    geom_point() +
    geom_line() +
    labs(x = "Year Observed",
         y = "",
         title = "Count of Name Variant") +
    scale_x_continuous(n.breaks=10) +
    scale_y_continuous(n.breaks=10)

```

## Question 9

```{r}

a_names |> 
  filter(Name == "Allan" | Name == "Alan" | Name == "Allen",
         Year == "2000",
         State == "PA" | State == "CA",
         Sex_at_Birth == "M") |> 
  group_by(State, Name) |> 
  summarize(al_counts = sum(Count), .groups = "drop") |> 
  pivot_wider(names_from = Name,
              values_from = al_counts)

```

## Question 10

```{r}

convert_percent <- function(row, total) {
  stopifnot(is.numeric(row))
  stopifnot(is.numeric(total))
  
  percentage <- round((row / total) * 100, 2)
  
  return(percentage)
}

a_names |> 
  filter(Name == "Allan" | Name == "Alan" | Name == "Allen",
         Year == "2000",
         State == "PA" | State == "CA",
         Sex_at_Birth == "M") |> 
  group_by(State, Name) |> 
  summarize(al_count = sum(Count), .groups = "drop") |> 
  pivot_wider(names_from = Name,
              values_from = al_count) |> 
  rowwise() |> 
  mutate(total_count = sum(c_across(Alan : Allen)),
         Alan = convert_percent(Alan, total_count),
         Allan = convert_percent(Allan, total_count),
         Allen = convert_percent(Allen, total_count)) |> 
  subset(, select = -c(total_count))

```
